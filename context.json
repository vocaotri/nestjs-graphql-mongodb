{
    "req": < ref * 1 > IncomingMessage {
        "_readableState": ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
            pipes: [],
            flowing: true,
            ended: true,
            endEmitted: true,
            reading: false,
            sync: false,
            needReadable: false,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            errorEmitted: false,
            emitClose: true,
            autoDestroy: false,
            destroyed: false,
            errored: null,
            closed: false,
            closeEmitted: false,
            defaultEncoding: 'utf8',
            awaitDrainWriters: null,
            multiAwaitDrain: false,
            readingMore: false,
            decoder: null,
            encoding: null,
            [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 8,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Server],
            _server: [Server],
            parser: [HTTPParser],
            on: [Function: socketListenerWrap],
            addListener: [Function: socketListenerWrap],
            prependListener: [Function: socketListenerWrap],
            _paused: false,
            _httpMessage: [ServerResponse],
            timeout: 0,
            [Symbol(async_id_symbol)]: 40,
            [Symbol(kHandle)]: [TCP],
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
                _idleTimeout: -1,
                _idlePrev: null,
                _idleNext: null,
                _idleStart: 2488,
                _onTimeout: null,
                _timerArgs: undefined,
                _repeat: null,
                _destroyed: true,
                [Symbol(refed)]: false,
                [Symbol(kHasPrimitive)]: false,
                [Symbol(asyncId)]: 48,
                [Symbol(triggerId)]: 46
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0,
            [Symbol(RequestTimeout)]: undefined
        },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: {
            host: 'localhost:3000',
            connection: 'keep-alive',
            'content-length': '290',
            'sec-ch-ua': '"Google Chrome";v="87", " Not;A Brand";v="99", "Chromium";v="87"',
            accept: '*/*',
            authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwMDdiMjlmZWM3OTkwNDE5ODRmNmEyMSIsImVtYWlsIjoidm9jYW90cmk3ODlAZ21haWwuY29tIiwiaWF0IjoxNjExMTMwMDk0LCJleHAiOjE2MTkwMTkzMjZ9.whCic6Os_fcKGDshAE5rja6tmHsuIFIAvJMfR-QWu78',
            'sec-ch-ua-mobile': '?0',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36',
            'content-type': 'application/json',
            origin: 'http://localhost:3000',
            'sec-fetch-site': 'same-origin',
            'sec-fetch-mode': 'cors',
            'sec-fetch-dest': 'empty',
            referer: 'http://localhost:3000/graphql',
            'accept-encoding': 'gzip, deflate, br',
            'accept-language': 'en-US,en;q=0.9,ja;q=0.8,vi;q=0.7'
        },
        rawHeaders: [
            'Host',
            'localhost:3000',
            'Connection',
            'keep-alive',
            'Content-Length',
            '290',
            'sec-ch-ua',
            '"Google Chrome";v="87", " Not;A Brand";v="99", "Chromium";v="87"',
            'accept',
            '*/*',
            'Authorization',
            'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwMDdiMjlmZWM3OTkwNDE5ODRmNmEyMSIsImVtYWlsIjoidm9jYW90cmk3ODlAZ21haWwuY29tIiwiaWF0IjoxNjExMTMwMDk0LCJleHAiOjE2MTkwMTkzMjZ9.whCic6Os_fcKGDshAE5rja6tmHsuIFIAvJMfR-QWu78',
            'sec-ch-ua-mobile',
            '?0',
            'User-Agent',
            'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36',
            'content-type',
            'application/json',
            'Origin',
            'http://localhost:3000',
            'Sec-Fetch-Site',
            'same-origin',
            'Sec-Fetch-Mode',
            'cors',
            'Sec-Fetch-Dest',
            'empty',
            'Referer',
            'http://localhost:3000/graphql',
            'Accept-Encoding',
            'gzip, deflate, br',
            'Accept-Language',
            'en-US,en;q=0.9,ja;q=0.8,vi;q=0.7'
        ],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/',
        method: 'POST',
        statusCode: null,
        statusMessage: null,
        client: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 8,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Server],
            _server: [Server],
            parser: [HTTPParser],
            on: [Function: socketListenerWrap],
            addListener: [Function: socketListenerWrap],
            prependListener: [Function: socketListenerWrap],
            _paused: false,
            _httpMessage: [ServerResponse],
            timeout: 0,
            [Symbol(async_id_symbol)]: 40,
            [Symbol(kHandle)]: [TCP],
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
                _idleTimeout: -1,
                _idlePrev: null,
                _idleNext: null,
                _idleStart: 2488,
                _onTimeout: null,
                _timerArgs: undefined,
                _repeat: null,
                _destroyed: true,
                [Symbol(refed)]: false,
                [Symbol(kHasPrimitive)]: false,
                [Symbol(asyncId)]: 48,
                [Symbol(triggerId)]: 46
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0,
            [Symbol(RequestTimeout)]: undefined
        },
        _consuming: true,
        _dumped: false,
        next: [Function: next],
        baseUrl: '/graphql',
        originalUrl: '/graphql',
        _parsedUrl: Url {
            protocol: null,
            slashes: null,
            auth: null,
            host: null,
            port: null,
            hostname: null,
            hash: null,
            search: null,
            query: null,
            pathname: '/graphql',
            path: '/graphql',
            href: '/graphql',
            _raw: '/graphql'
        },
        params: {},
        query: {},
        res: ServerResponse {
            _events: [Object: null prototype],
            _eventsCount: 1,
            _maxListeners: undefined,
            outputData: [],
            outputSize: 0,
            writable: true,
            destroyed: false,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            _defaultKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedConnection: false,
            _removedContLen: false,
            _removedTE: false,
            _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket: [Socket],
            _header: null,
            _keepAliveTimeout: 5000,
            _onPendingData: [Function: bound updateOutgoingData],
            _sent100: false,
            _expect_continue: false,
            req: [Circular * 1],
            locals: [Object: null prototype] {},
            [Symbol(kCapture)]: false,
            [Symbol(kNeedDrain)]: false,
            [Symbol(corked)]: 0,
            [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        body: {
            operationName: null,
            variables: {},
            query: 'mutation {\n' +
                '  addUser(newUserData: {name: "trivo", email: "vocaotri248@gmail.com", password: "12345678", hobbies: ["6007a7206a3f2b305894efef"]}) {\n' +
                '    id\n' +
                '    email\n' +
                '    name\n' +
                '    updatedAt\n' +
                '    hobbies {\n' +
                '      name\n' +
                '    }\n' +
                '  }\n' +
                '}\n'
        },
        _body: true,
        length: undefined,
        [Symbol(kCapture)]: false,
        [Symbol(RequestTimeout)]: undefined
    },
    _extensionStack: GraphQLExtensionStack { extensions: [] }
}